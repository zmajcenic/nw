10 'SET COLOR TABLE COLORS AND THEN MANUALLY CHANGE BORDER TO BLUE
10 KEYOFF:COLOR 15,1,1:SCREEN 2,2:VDP(7)=(VDP(7) AND &HFC) OR 4:POKE &HF3EB,4
20 DEFINT A-Z

110 ' FAKE SCREEN 1 MODE, SET WIDTH 30, 6 LINES SCREEN HEIGHT AND NAME TABLE BEGIN
110 POKE &HFCAF,1:' SCREEN MODE
120 POKE &HF3AF,30:' LINL32
130 POKE &HF3B0,30:' LINLEN
140 POKE &HF3B1,6:' CRTCNT
150 Y=BASE(10)+512+2*32:' SCREEN 2 NAME TABLE BOTTOM THIRD PLUS 2 ROWS
160 POKE &HF922,Y MOD 256
170 POKE &HF3BD,Y MOD 256
180 POKE &HF923,Y\256
190 POKE &HF9BE,Y\256
200 CLS:Y=BASE(10)+512:FOR I=0 TO 63:VPOKE Y+I,32:NEXT
210 ' DO FIXES REGARDING CURSOR FOR INPUT COMMAND
210 VPOKE BASE(10)+255,254:VPOKE BASE(10)+511,254:' HIDE 255 CHAR
220 ' FILL PATTERN OF CURSOR CHARACTER
220 'VPOKE BASE(12)+6143,255
250 PRINT "WAIT ...."

310 ' COPY CHARACTER SET FROM ROM TO LOWER SCREEN THIRD AND SET COLOR
310 X=256*PEEK(5)+PEEK(4)+32*8:' FONT FROM CHARACTER 32
320 Y=BASE(12)+4096+32*8:Z=BASE(11)+4096+32*8
330 FOR I=0 TO 767:VPOKE Y+I,PEEK (X+I):VPOKE Z+I,&H1F:NEXT

410 ' DEFINE CHARACTER 0 - LEFT GRID
410 Y=BASE(12)+4096:RESTORE 60370
420 FOR I=0 TO 7:READ A: VPOKE Y+I,A:NEXT
440 ' DEFINE CHARACTER 31 - RIGHT GRID
440 Y=BASE(12)+4096+31*8
450 FOR I=0 TO 7:READ A: VPOKE Y+I,A:NEXT
470 ' DRAW GRID
470 Y=BASE(10)+512
480 FOR I=0 TO 7:VPOKE Y+I*32,0:VPOKE Y+I*32+31,31:NEXT
500 ' COLOR GRID
500 Z=BASE(11)+4096
510 FOR I=0 TO 7:VPOKE Z+I,&H1E:VPOKE Z+I+248,&H1E:NEXT

710 ' DEFINE ACTION BUTTONS
710 RESTORE 60020
720 BN=5:K=255-4*BN:Y=BASE(12)+4096+8*K:Z=BASE(11)+4096+8*K
730 FOR I=0 TO BN*32-1:READ A:VPOKE Y+I,A:VPOKE Z+I,&H1E:NEXT
750 ' DEFINE CHARACTER 1-4 - UPPER AND LOWER SEPARATORS AND FILLERS
750 Y=BASE(12)+4096+8:Z=BASE(11)+4096+8:RESTORE 62000
760 FOR I=0 TO 31:READ A: VPOKE Y+I,A:VPOKE Z+I,&H1E:NEXT
770 Y=BASE(10)+513
780 FOR L=0 TO BN-1:FOR J=0 TO 1:FOR I=0 TO 1
790 VPOKE Y+J+I*32,K:K=K+1
800 NEXT I:NEXT J
810 VPOKE Y+2,1:VPOKE Y+34,2:Y=Y+3:NEXT L
820 FOR I=0 TO 29-BN*3:VPOKE Y,3:VPOKE Y+32,4:Y=Y+1:NEXT

900 POKE &HFCAF,2:' SCREEN MODE
910 LINE (0,0)-(255,127),4,BF
920 GOSUB 40000:'ISLANDS

930 'HIDE ALL SPRITES
930 Y=BASE(13):FOR I=0 TO 31:VPOKE Y+I*4,&HD1:NEXT

950 'LOAD SPRITES
950 I=0:RESTORE 60500:GOSUB 53000
960 ' INIT CITY SIZES AND DRAW
960 DIM NC(2,2)
970 FOR I=0 TO 2:FOR J=0 TO 2:NC(I,J)=100:NEXT J:NEXT I
980 GOSUB 42000
990 'INIT MISSILE NUMBER PER PLAYER, WARHEAD NUMBER, SAT NUMBER, MISSILE READY, PLAYER ALIVE, PLAYER TYPE, PLAYER ACTION, SELECTED TARGET, AI RELATION STATUS
990 DIM NM(2):DIM NW(2):DIM NS(2):DIM MR(2):DIM PA(2):DIM PT(2):DIM AC(2):DIM ST(2):DIM RS(2,2)
991 'SECONDARY EVENTS, ACTION RESULTS FOR PRIMARY ACTIONS (AC) AND RANDOM EVENTS (BC)
991 DIM BC(2):DIM RZ(2,2):DIM RY(2,2)
1000 FOR I=0 TO 2
1010 NM(I)=1:NW(I)=1:NS(I)=1:PA(I)=1:FOR K=0 TO 2:RS(I,K)=INT(RND(1)*10)-5:NEXT K
1020 NEXT I
1030 'SET PLAYER 1 AS LOCAL HUMAN, OTHERS AS COMPUTER (TYPE 0)
1030 HP=1:PT(HP)=1
1060 'PLACE ROCKET, SAT AND RADIO TOWER FOR SHOW - TO BE REPLACED
1060 'PUT SPRITE 9,(152,3),15,8:PUT SPRITE 22,(152,3),1,9
1070 'PUT SPRITE 10,(240,34),1,10:PUT SPRITE 21,(240,34),6,11
1080 'PUT SPRITE 11,(90,85),1,12:PUT SPRITE 20,(90,85),15,13

5000 GOSUB 52000
5010 VPOKE BASE(11)+1,&HF4:VPOKE BASE(11)+2049,&HF4
5020 ON INTERVAL=100 GOSUB 41000
5030 R=INT(RND(-TIME)):INTERVAL ON
5040 POKE &HFCAF,1:' SCREEN MODE

9999 GOTO 20000:'PRINT INVENTORY
10000 'MAIN LOOP
10000 PRINT "command: ";
10030 A$=INKEY$:IF A$="" GOTO 10030
10040 PRINT A$
10050 IF A$="A" OR A$="a" GOTO 15000
10060 IF A$="M" OR A$="m" GOTO 16000
10070 IF A$="D" OR A$="d" GOTO 17000
10080 IF A$="L" OR A$="l" GOTO 18000
10090 IF A$="P" OR A$="p" GOTO 19000
10100 IF A$="I" OR A$="i" GOTO 20000
10110 PRINT "unknown command ";A$
10120 GOTO 10000

10500 'PROCESS AI PLAYERS
10500 IF PT(0)=0 THEN I=0:GOSUB 20100
10510 IF PT(2)=0 THEN I=2:GOSUB 20100
10600 'PROCESS RESULTS OF SELECTED ACTIONS ON SERVER
10600 FOR I=0 TO 2
10610 IF PA(I)=0 GOTO 10710
10620 ON AC(I) GOTO 10710,10660,10710,10680
10630 'AC=0 MANUFACTURE
10630 FOR J=0 TO 2
10640 RZ(I,J)=INT(2*RND(1)+(NC(I,0)+NC(I,1)+NC(I,2))*RND(1)/100)
10650 NEXT J:GOTO 10710
10660 'AC=2 LAUNCH MISSILE
10660 RZ(I,0)=INT(RND(1)*20)
10670 GOTO 10710
10680 'AC=4 PROPAGANDA
10680 FOR J=0 TO 2
10690 RZ(I,J)=INT(RND(1)*3)
10700 NEXT J
10710 NEXT I 

12000 'EXECUTE ACTIONS AND APPLY RESULTS
12000 FOR I=0 TO 2
12010 IF PA(I)=0 GOTO 14000
12020 ON AC(I) GOTO 12230
12030 'MANUFACTURE
12030 'ANIMATE FACTORY
12040 IF I=0 THEN X=152:Y=3:S1=9:S2=22:GOTO 12070
12050 IF I=1 THEN X=160:Y=44:S1=10:S2=21:GOTO 12070
12060 IF I=2 THEN X=90:Y=85:S1=11:S2=20
12070 C=0:K=0
12075 SOUND 0,255:SOUND 1,14:SOUND 8,9:SOUND 13,10:SOUND 6,245:SOUND 7,182
12080 PUT SPRITE S1,(X+C,Y),1,14:PUT SPRITE S2,(X+C,Y),C+14,15
12090 TIME=0
12100 IF TIME<10 GOTO 12100
12110 K=K+1:IF K>10 THEN PUT SPRITE S1,(0,209):PUT SPRITE S2,(0,209):GOSUB 43000:GOTO 12130
12120 C=(C+1) MOD 2:GOTO 12080
12130 'DISPLAY RESULTS FOR HUMAN PLAYER ONLY
12130 IF HP<>I GOTO 12190
12140 PRINT "You manufacture: ";
12150 IF (RZ(I,0)+RZ(I,1)+RZ(I,2))=0 THEN PRINT "nothing." ELSE PRINT
12160 IF RZ(I,0)>0 THEN PRINT RZ(I,0);" missile";:IF RZ(I,0)>1 THEN PRINT "s" ELSE PRINT
12170 IF RZ(I,1)>0 THEN PRINT RZ(I,1);" warhead";:IF RZ(I,1)>1 THEN PRINT "s" ELSE PRINT
12180 IF RZ(I,2)>0 THEN PRINT RZ(I,2);" satellite";:IF RZ(I,2)>1 THEN PRINT "s" ELSE PRINT
12190 NM(I)=NM(I)+RZ(I,0)
12200 NW(I)=NW(I)+RZ(I,1)
12210 NS(I)=NS(I)+RZ(I,2)
12220 MR(I)=0:GOTO 14000
12230 'ARM MISSILE
12230 IF I=0 THEN X=152:Y=3:S1=9:S2=22:GOTO 12260
12240 IF I=1 THEN X=160:Y=44:S1=10:S2=21:GOTO 12260
12250 IF I=2 THEN X=90:Y=85:S1=11:S2=20
12260 PUT SPRITE S1,(X,Y),15,8:PUT SPRITE S2,(X,Y),1,9
12270 PLAY "V12T200O4CRCO5CCRRR"
12280 IF PLAY(0) THEN 12280
12290 MR(I)=1:NM(I)=NM(I)-1:GOTO 14000

14000 NEXT I:GOTO 10000


15000 'ARM MISSILE COMMAND
15000 PRINT "-Arm missile-"
15010 IF MR(HP)=1 THEN PRINT "Missile already armed":GOTO 10000
15020 IF NM(HP)=0 THEN PRINT "No missiles to arm":GOTO 10000
15030 GOSUB 39000
15040 IF A$="N" GOTO 10000
15050 PRINT "Arming missile"
15060 AC(HP)=1:GOTO 10500

16000 'MANUFACTURE COMMAND
16000 PRINT "-Manufacture weapons-"
16010 GOSUB 39100
16020 GOSUB 39000
16030 IF A$="N" GOTO 10000
16040 PRINT "Preparing production"
16050 MR(HP)=0:AC(HP)=0:GOTO 10500

17000 'DEFENSE SATELLITE COMMAND
17000 PRINT "-Launch defense satellite-"
17010 IF NS(HP)=0 THEN PRINT "No defense satellites":GOTO 10000
17020 GOSUB 39100
17030 GOSUB 39000
17040 IF A$="N" THEN GOTO 10000
17050 PRINT "Preparing satellite"
17060 MR(HP)=0:AC(HP)=3:GOTO 10500

18000 'LAUNCH MISSILE COMMAND
18000 PRINT "-Launch missile-"
18010 IF MR(HP)=0 THEN PRINT "Arm missile first":GOTO 10000
18020 IF NW(HP)=0 THEN PRINT "No warhead to mount":GOTO 10000
18030 GOSUB 39500:GOSUB 39700
18040 INPUT "Enter target city";A$
18050 IF LEN(A$)<>2 GOTO 18040
18060 B$=LEFT$(A$,1):C$=RIGHT$(A$,1)
18070 IF (B$="A" OR B$="a") AND HP<>0 AND PA(0)=1 THEN TP=0:GOTO 18110
18080 IF (B$="B" OR B$="b") AND HP<>1 AND PA(1)=1 THEN TP=1:GOTO 18110
18090 IF (B$="C" OR B$="c") AND HP<>2 AND PA(2)=1 THEN TP=2:GOTO 18110
18100 GOTO 18040
18110 IF C$="1" AND NC(TP,0)>0 THEN TC=0:GOTO 18150
18120 IF C$="2" AND NC(TP,1)>0 THEN TC=1:GOTO 18150
18130 IF C$="3" AND NC(TP,2)>0 THEN TC=2:GOTO 18150
18140 GOTO 18040
18150 GOSUB 39600:GOSUB 39800
18160 GOSUB 39000
18170 IF A$="N" GOTO 18200
18180 PRINT "Preparing launch"
18190 AC(HP)=2:ST(HP)=TP*10+TC:GOTO 10500

19000 'PROPAGANDA COMMAND
19000 PRINT "-Propaganda-"
19010 GOSUB 39100
19020 GOSUB 39500
19030 PRINT "Target player? ";
19040 A$=INKEY$:IF A$="" GOTO 19040
19050 PRINT A$
19060 IF (A$="A" OR A$="a") AND HP<>0 AND PA(0)=1 THEN TP=0:GOTO 19100
19070 IF (A$="B" OR A$="b") AND HP<>1 AND PA(1)=1 THEN TP=1:GOTO 19100
19080 IF (A$="C" OR A$="c") AND HP<>2 AND PA(2)=1 THEN TP=2:GOTO 19100
19090 GOTO 19030
19100 GOSUB 39600
19110 GOSUB 39000
19120 IF A$="N" GOTO 19140
19130 PRINT "Preparing propaganda"
19140 AC(HP)=4:ST(HP)=TP:MR(HP)=0:GOTO 10000

20000 'INVENTORY COMMAND
20000 PRINT "You have:"
20010 PRINT NM(HP); "missile";:IF NM(HP)<>1 THEN PRINT "s" ELSE PRINT
20020 PRINT NW(HP); "warhead";:IF NW(HP)<>1 THEN PRINT "s" ELSE PRINT
20030 PRINT NS(HP); "satellite";:IF NS(HP)<>1 THEN PRINT "s" ELSE PRINT
20040 GOTO 10000

20100 'PROCESS AI MOVES, I=CURRENT AI PLAYER
20100 'IF MISSILE ARMED, FIND TARGET
20100 IF MR(I)=0 OR NW(I)=0 GOTO 20150
20110 'SELECT PLAYER WE HATE MOST
20110 K=32767:FOR J=0 TO 2:IF J<>I AND RS(I,J)<K THEN K=RS(I,J):L=J
20115 NEXT J
20120 'SELECT SMALLEST CITY
20120 K=32767:FOR J=0 TO 2:IF NC(L,J)>0 AND NC(L,J)<K THEN K=NC(L,J):C=J
20125 NEXT J
20130 'ENCODE TARGET AND SET ACTION
20130 AC(I)=2:ST(I)=L*10+C
20140 RETURN
20150 'CHECK IF SOMEONE ELSE HAS MISSILE READY TO LAUNCH AND WE CAN DEFEND
20150 IF NS(I)=0 GOTO 20190
20160 IF I<>0 AND MR(0)=1 AND RS(I,0)<0 THEN AC(I)=3:MR(I)=0:RETURN
20170 IF I<>1 AND MR(1)=1 AND RS(I,1)<0 THEN AC(I)=3:MR(I)=0:RETURN
20180 IF I<>2 AND MR(2)=1 AND RS(I,2)<0 THEN AC(I)=3:MR(I)=0:RETURN
20190 'CHECK IF WE ARE DOWN TO 0 STOCKS
20190 IF NM(I)=0 OR NW(I)=0 OR NS(0)=0 THEN AC(I)=0:MR(I)=0:RETURN
20200 '50-50 ARM MISSILE OR PROPAGANDA
20200 IF RND(1)<0.5 THEN AC(I)=1:RETURN
20210 'PROPAGANDA
20210 'SELECT PLAYER WE HATE MOST
20210 K=32767:FOR J=0 TO 2:IF J<>I AND RS(I,J)<K THEN K=RS(I,J):L=J
20215 NEXT J
20220 AC(I)=4:ST(I)=L:MR(I)=0:RETURN

39000 'CONFIRM PROMPT (Y/N)
39000 PRINT "Confirm action (y/n):";
39010 A$=INKEY$:IF A$="" GOTO 39010
39020 PRINT A$
39030 IF A$="y" THEN A$="Y":RETURN
39040 IF A$="n" THEN A$="N":RETURN
39050 IF A$="Y" OR A$="N" THEN RETURN
39060 GOTO 39000

39100 'SCRAP MISSILE WARNING
39100 IF MR(HP)=1 THEN PRINT "This will scrap armed missile"
39110 RETURN

39200 'WRITE ISLAND LETTERS
39200 OPEN "GRP:" FOR OUTPUT AS #1
39210 IF HP<>0 AND PA(0)=1 THEN PSET (106,29),10:PRINT#1,"A"
39220 IF HP<>1 AND PA(1)=1 THEN PSET (215,67),10:PRINT#1,"B"
39230 IF HP<>2 AND PA(2)=1 THEN PSET (20,108),10:PRINT#1,"C"
39240 CLOSE #1:POKE &HFCAF,1
39250 RETURN

39300 'WRITE CITY NUMBERS
39300 OPEN "GRP:" FOR OUTPUT AS #1
39310 IF HP=0 OR PA(0)=0 GOTO 39350
39320 IF NC(0,0)>0 THEN PSET(14,22),10:PRINT#1,"1"
39330 IF NC(0,1)>0 THEN PSET(51,27),10:PRINT#1,"2"
39340 IF NC(0,2)>0 THEN PSET(84,10),10:PRINT#1,"3"
39350 IF HP=1 OR PA(1)=0 GOTO 39390
39360 IF NC(1,0)>0 THEN PSET(114,63),10:PRINT#1,"1"
39370 IF NC(1,1)>0 THEN PSET(162,68),10:PRINT#1,"2"
39380 IF NC(1,2)>0 THEN PSET(194,51),10:PRINT#1,"3"
39390 IF HP=2 OR PA(2)=0 THEN RETURN
39400 IF NC(2,0)>0 THEN PSET(51,92),10:PRINT#1,"1"
39410 IF NC(2,1)>0 THEN PSET(66,109),10:PRINT#1,"2"
39420 IF NC(2,2)>0 THEN PSET(114,97),10:PRINT#1,"3"
39430 CLOSE #1:POKE &HFCAF,1:RETURN

39500 'DISPLAY ISLAND LETTERS
39500 POKE &HFCAF,2:COLOR 1:GOTO 39200

39600 'HIDE ISLAND LETTERS
39600 POKE &HFCAF,2:COLOR 10:GOTO 39200

39700 'DISPLAY CITY NUMBERS
39700 POKE &HFCAF,2:COLOR 13:GOTO 39300

39800 'HIDE CITY NUMBERS
39800 POKE &HFCAF,2:COLOR 10:GOTO 39300

40000 ' DRAW TOP ISLAND
40000 PRESET (15,12)
40020 DRAW "C10 R15U1R4U2R23U1R55D1R8D2R7D1R10D2R17U1R6D1R3D1R3D3L1D2L2D1L19D2L7D1L3D2L1D1L5D1L3D1L1D1L1D1L2D2L1D1L2D1L3D2L16D1L3D1L1D1L5D1L49D1L12U1L3U1L3U2L14U3L2U1L1U3L2U5L1U3R2U2R1U2R2U1R1U2R2U1R4U2"
40030 PAINT (16,13),10,10
40040 PRESET (9,38)
40050 DRAW "C6 R14D2R2BD1BR4BD1R12BU1BR1R48BU1BR1R4BU1BR1U1R3BU1BR1R15BR4BU3R1U1R1BR5BU5R2U1R5BR2BU2R2BU1BR1R6U2R19"
40060 ' DRAW MIDDLE ISLAND
40070 PRESET (76,69)
40080 DRAW "C10 R2U4R3U1R1U1R4U1R7U1R1U1R3U1R3U1R1U1R1U1R15U1R3U1R1U1R5U1R5U1R1U1R5U1R82D1R1D2R2D1R6D2R17D1R3D1R1D2R2D1R1D3R3D5L1D4L2D2L1D1L4D1L19U1L22D2L5D1L6D1L1D1L7D1L21U2L6U1L1U1L15D1L3D1L1D2L13U1L1U1L16U1L11U2L4U1L11U1L5U2L3U1L1U1L1"
40090 PAINT (82,67),10,10
40100 PRESET (79,74)
40110 DRAW "C6 R4BR1BD1R10BR1BD1R3BR1BD2R10BR1BD1R15BR1BD1R1D1R13BR20BU2R5BR1BD2R21BR1BU1R6BR2BU2R5U1R5BR1BU2R21D1R19BR1BU1R3"
40120 ' DRAW BOTTOM ISLAND
40130 PRESET (7,95)
40140 DRAW "C10 R9U1R6U1R4U1R4U1R4U2R8U1R8D1R28D1R15U1R6F2R13F2R4F1R9F1R6F1R9D3R1F1D2R1G1L2D7G1L5D1L7D1L2D1L5D1L9U1L4U2L7D1L2D1L3D1G1D1L2D1L2D1L3D1L2D1L5D1L16U1L5U1L8U1L18U1L4U1L2U1L20G1L8H2U4E1U1E1R2U1E1U3L1U2L1U2L1U1E1U1"
40150 PAINT (9,97),10,10
40160 PRESET (5,117)
40170 DRAW "C6 R8E1R19BR3BD2R3F1R17F1R7F1R5D1R16E1R4BR4BU2R1BR7BU5R1BR3BU2R5BR5BD3R9E1R4BR3BU2R6E1R4"
40990 RETURN

41000 ' ON INTERVAL ROUTINE
41000 R=INT(RND(1)*256):VPOKE BASE(12)+1,R:VPOKE BASE(12)+2049,R
41990 RETURN

42000 ' DRAW CITIES BASED ON NUMBER OF PEOPLE
42000 IF NC(0,0)=0 THEN I=6 ELSE IF NC(0,0)<10 THEN I=4 ELSE IF NC(0,0)<50 THEN I=2 ELSE I=0
42010 PUT SPRITE 0,(20,15),1,I:PUT SPRITE 30,(20,15),15,I+1
42020 IF NC(0,1)=0 THEN I=6 ELSE IF NC(0,1)<10 THEN I=4 ELSE IF NC(0,1)<50 THEN I=2 ELSE I=0
42030 PUT SPRITE 1,(57,27),1,I:PUT SPRITE 31,(57,27),15,I+1
42040 IF NC(0,2)=0 THEN I=6 ELSE IF NC(0,2)<10 THEN I=4 ELSE IF NC(0,2)<50 THEN I=2 ELSE I=0
42050 PUT SPRITE 2,(90,3),1,I:PUT SPRITE 29,(90,3),15,I+1
42060 IF NC(1,0)=0 THEN I=6 ELSE IF NC(1,0)<10 THEN I=4 ELSE IF NC(1,0)<50 THEN I=2 ELSE I=0
42070 PUT SPRITE 4,(97,56),1,I:PUT SPRITE 27,(97,56),7,I+1
42080 IF NC(1,1)=0 THEN I=6 ELSE IF NC(1,1)<10 THEN I=4 ELSE IF NC(1,1)<50 THEN I=2 ELSE I=0
42090 PUT SPRITE 3,(168,68),1,I:PUT SPRITE 28,(168,68),7,I+1
42100 IF NC(1,2)=0 THEN I=6 ELSE IF NC(1,2)<10 THEN I=4 ELSE IF NC(1,2)<50 THEN I=2 ELSE I=0
42110 PUT SPRITE 5,(200,44),1,I:PUT SPRITE 26,(200,44),7,I+1
42120 IF NC(2,0)=0 THEN I=6 ELSE IF NC(2,0)<10 THEN I=4 ELSE IF NC(2,0)<50 THEN I=2 ELSE I=0
42130 PUT SPRITE 8,(34,85),1,I:PUT SPRITE 23,(34,85),13,I+1
42140 IF NC(2,1)=0 THEN I=6 ELSE IF NC(2,1)<10 THEN I=4 ELSE IF NC(2,1)<50 THEN I=2 ELSE I=0
42150 PUT SPRITE 6,(72,109),1,I:PUT SPRITE 25,(72,109),13,I+1
42160 IF NC(2,2)=0 THEN I=6 ELSE IF NC(2,2)<10 THEN I=4 ELSE IF NC(2,2)<50 THEN I=2 ELSE I=0
42170 PUT SPRITE 7,(120,97),1,I:PUT SPRITE 24,(120,97),13,I+1
42990 RETURN

43000 'SILENCE
43000 DEFUSR=&H90:A=USR(0):RETURN

52000 ' SEA TILES
52000 RESTORE 52100
52020 X=BASE(10)
52030 READ A:IF A=-1 THEN RETURN
52040 VPOKE X+A,0
52050 GOTO 52030
52100 DATA 8,17,26,62,88,115,122,144,150,156,161,175,184,196,204,226,231
52110 DATA 263,290,296,325,334,339,348,373,381,407,411,435,440,447,469,477,493,500,507,-1

53000 'LOAD SPRITE DEFINITIONS, I=BEGIN SPRITE
53000 S=BASE(9)+I*32
53020 READ R$: IF R$="*" THEN RETURN ELSE VPOKE S,VAL(R$):S=S+1:GOTO 53020

60000 ' --- factory
60010 ' color 1
60020 DATA &HFF,&H00,&H30,&H30,&H31,&H33,&H3F,&H3F
60030 DATA &H32,&H35,&H37,&H37,&H3F,&H00,&HFF,&H00
60040 DATA &HFF,&H00,&H00,&H00,&H24,&H6C,&HFC,&HFC
60050 DATA &H7C,&H7C,&H7C,&H7C,&HFC,&H00,&HFF,&H00
60060 ' 
60070 ' --- rocket
60080 ' color 1
60090 DATA &HFF,&H00,&H00,&H00,&H00,&H01,&H03,&H07
60100 DATA &H1F,&H27,&H0A,&H12,&H04,&H00,&HFF,&H00
60110 DATA &HFF,&H00,&H00,&H70,&HF0,&HB0,&H60,&HC0
60120 DATA &H80,&H1C,&H14,&H1C,&H14,&H00,&HFF,&H00
60130 ' 
60140 ' --- satellite
60150 ' color 1
60160 DATA &HFF,&H00,&H00,&H00,&H00,&H00,&H00,&H01
60170 DATA &H05,&H0E,&H1B,&H36,&H1C,&H08,&HFF,&H00
60180 DATA &HFF,&H00,&H10,&H38,&H6C,&HD8,&H70,&HA0
60190 DATA &H80,&H0C,&H0A,&H0A,&H0C,&H00,&HFF,&H00
60200 ' 
60210 ' --- propaganda
60220 ' color 1
60230 DATA &HFF,&H09,&H25,&H10,&H09,&H43,&H37,&H03
60240 DATA &H31,&H45,&H09,&H11,&H03,&H03,&HFF,&H00
60250 DATA &HFF,&H20,&H48,&H10,&H20,&H84,&HD8,&H80
60260 DATA &H10,&H46,&H25,&H06,&H84,&H80,&HFF,&H00
60270 ' 
60280 ' --- Launch
60290 ' color 1
60300 DATA &HFF,&H00,&H07,&H08,&H13,&H27,&H2F,&H2F
60310 DATA &H2F,&H27,&H13,&H08,&H07,&H00,&HFF,&H00
60320 DATA &HFF,&H00,&HC0,&H20,&H90,&HC8,&HE8,&HE8
60330 DATA &HE8,&HC8,&H94,&H24,&HC6,&H00,&HFF,&H00
60340 ' 
60350 ' --- grid
60360 ' color 1
60370 DATA &HFE,&H82,&HA2,&H82,&H82,&H82,&H8A,&H82
60380 DATA &H7F,&H41,&H51,&H41,&H41,&H41,&H45,&H41

60500 'city sprites
60510 ' --- city large
60520 ' color 1
60530 DATA &HFC,&HFC,&HB5,&HFD,&HAD,&HFD,&HB5,&HFD
60540 DATA &HD5,&HFD,&HFD,&HFD,&H00,&H00,&H00,&H00
60550 DATA &H0F,&H0B,&HEF,&HEB,&H6D,&HEF,&HAB,&HEF
60560 DATA &HED,&HEF,&HEF,&HEF,&H00,&H00,&H00,&H00
60570 ' color 7
60580 DATA &H00,&H00,&H48,&H00,&H50,&H00,&H48,&H00
60590 DATA &H28,&H00,&H00,&H00,&H00,&H00,&H00,&H00
60600 DATA &H00,&H04,&H00,&H04,&H82,&H00,&H44,&H00
60610 DATA &H02,&H00,&H00,&H00,&H00,&H00,&H00,&H00
60620 ' --- city medium
60630 ' color 1
60640 DATA &H00,&H01,&H02,&H07,&H03,&H12,&H3A,&H54
60650 DATA &HFE,&H7C,&H4C,&H4C,&H00,&H00,&H00,&H00
60660 DATA &H80,&HC0,&HA0,&HF0,&HE0,&H68,&H5C,&H3E
60670 DATA &H6B,&H3E,&H26,&H26,&H00,&H00,&H00,&H00
60680 ' color 15
60690 DATA &H00,&H00,&H01,&H00,&H00,&H01,&H01,&H28
60700 DATA &H00,&H00,&H30,&H30,&H00,&H00,&H00,&H00
60710 DATA &H00,&H00,&H40,&H00,&H00,&H80,&H80,&H00
60720 DATA &H14,&H00,&H18,&H18,&H00,&H00,&H00,&H00
60730 ' --- city small
60740 ' color 1
60750 DATA &H00,&H00,&H00,&H10,&H38,&H6C,&HC6,&H00
60760 DATA &H09,&H1C,&H36,&H63,&H00,&H00,&H00,&H00
60770 DATA &H08,&H1C,&H36,&H63,&H00,&H20,&H70,&HD8
60780 DATA &H8C,&H00,&H00,&H00,&H00,&H00,&H00,&H00
60790 ' color 15
60800 DATA &H00,&H00,&H00,&H00,&H00,&H10,&H38,&H00
60810 DATA &H00,&H00,&H08,&H1C,&H00,&H00,&H00,&H00
60820 DATA &H00,&H00,&H08,&H1C,&H00,&H00,&H00,&H20
60830 DATA &H70,&H00,&H00,&H00,&H00,&H00,&H00,&H00
60840 ' --- city rubble
60850 ' color 1
60860 DATA &H00,&H00,&H00,&H00,&H00,&H01,&H3E,&H69
60870 DATA &H32,&H1F,&H00,&H00,&H00,&H00,&H00,&H00
60880 DATA &H00,&H00,&H00,&H00,&H00,&HE0,&HDC,&H2B
60890 DATA &HFE,&H80,&H00,&H00,&H00,&H00,&H00,&H00
60900 ' color 9
60910 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H06
60920 DATA &H0D,&H00,&H00,&H00,&H00,&H00,&H00,&H00
60930 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&HD4
60940 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
60950 ' --- missile
60960 ' color 1
60970 DATA &H00,&H01,&H01,&H09,&H09,&H09,&H09,&H09
60980 DATA &H09,&H09,&H0A,&H1F,&H00,&H00,&H00,&H00
60990 DATA &H80,&HC0,&HC0,&H40,&HC0,&HC0,&H40,&H40
61000 DATA &HDC,&HD4,&HB4,&HFC,&H00,&H00,&H00,&H00
61010 ' color 15
61020 DATA &H00,&H00,&H00,&H00,&H06,&H00,&H00,&H00
61030 DATA &H00,&H00,&H01,&H00,&H00,&H00,&H00,&H00
61040 DATA &H00,&H00,&H00,&H80,&H00,&H00,&H80,&H80
61050 DATA &H00,&H08,&H48,&H00,&H00,&H00,&H00,&H00
61060 ' --- defense sattelite
61070 ' color 1
61080 DATA &H1C,&H16,&H1B,&H0E,&H05,&H01,&H00,&H00
61090 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
61100 DATA &H00,&H00,&H00,&H00,&H80,&HA0,&H70,&HD8
61110 DATA &H68,&H38,&H00,&H00,&H00,&H00,&H00,&H00
61120 ' color 6
61130 DATA &H00,&H08,&H04,&H00,&H00,&H00,&H02,&H04
61140 DATA &H08,&H10,&H20,&H40,&H00,&H00,&H00,&H00
61150 DATA &H08,&H10,&H20,&H40,&H00,&H00,&H00,&H20
61160 DATA &H10,&H00,&H00,&H00,&H00,&H00,&H00,&H00
61170 ' --- propaganda active
61180 ' color 1
61190 DATA &H00,&H00,&H00,&H00,&H00,&H01,&H01,&H01
61200 DATA &H01,&H01,&H01,&H01,&H00,&H00,&H00,&H00
61210 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
61220 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
61230 ' color 15
61240 DATA &H07,&H08,&H13,&H24,&H2B,&H2A,&H14,&H08
61250 DATA &H06,&H00,&H00,&H00,&H00,&H00,&H00,&H00
61260 DATA &HC0,&H20,&H90,&H48,&HA8,&HA8,&H50,&H20
61270 DATA &HC0,&H00,&H00,&H00,&H00,&H00,&H00,&H00
61280 ' --- factory active
61290 ' color 1
61300 DATA &H00,&H30,&H30,&H31,&H33,&H3F,&H33,&H33
61310 DATA &H3F,&H3F,&H3F,&H3F,&H00,&H00,&H00,&H00
61320 DATA &H00,&H00,&H00,&H24,&H6C,&HFC,&H6C,&HFC
61330 DATA &HFC,&HFC,&HFC,&HFC,&H00,&H00,&H00,&H00
61340 ' color 14
61350 DATA &H38,&H01,&H01,&H00,&H00,&H00,&H0C,&H0C
61360 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
61370 DATA &HDB,&HB6,&H24,&H00,&H00,&H00,&H90,&H00
61380 DATA &H00,&H00,&H00,&H00,&H00,&H00,&H00,&H00
61390 DATA *

62000 ' action separator
62000 DATA &HFF,&H10,&H10,&H10,&H10,&H10,&H10,&H10
62020 DATA &H10,&H10,&H10,&H10,&H10,&H10,&HFF,0
62030 ' action filler
62030 DATA &HFF,0,0,0,0,0,0,0,0,0,0,0,0,0,&HFF,0